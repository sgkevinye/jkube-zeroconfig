# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  displayName: 'Build and Unit Test'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'test'
- task: oc-cmd@3
  displayName: 'Connect to OpenShift'
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'rosademo1'
    cmd: 'status'
- task: Maven@3
  displayName: 'Generate Resources'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean oc:resource'
    options: '-Popenshift'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: Maven@3
  displayName: 'Container Build in OpenShift'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package oc:build'
    options: '-Popenshift'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: Maven@3
  displayName: 'Deploy Resources'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'oc:deploy'
    options: '-Popenshift'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

